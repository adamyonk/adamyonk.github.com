#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

require 'compass'
Compass.add_project_configuration 'compass.rb'

preprocess do
  items.delete_if { |item| item[:publish] == false }
end

compile '/stylesheets/*/' do
  filter :sass, Compass.sass_engine_options
end

compile '/javascripts/*/' do
  filter :coffeescript
end

compile '*' do
  unless item.binary?
    ext = item[:extension].nil? ? nil : item[:extension].split('.').last
    case ext
    when 'haml'
      filter :haml
    when 'markdown' || 'md'
      filter :erb
      filter :rdiscount
    when 'erb'
      filter :erb
    end

    layout item[:layout] || 'default' unless item[:layout] == 'none'
  end
end

route '/stylesheets/*/' do
  item.identifier.chop + '.css'
end

route '/javascripts/*/' do
  item.identifier.chop + '.js'
end

route '*' do
  return item.identifier + 'index.html' if item[:content_filename].nil?

  url = item[:content_filename].gsub(/^content/, '')

  # Determine output extension
  extname = '.' + item[:extension].split('.').last
  outext = '.haml'
  if url.match(/(\.[a-zA-Z0-9]+){2}$/) # => *.html.erb, *.html.md ...
    outext = '' # remove 2nd extension
  elsif extname == '.sass'
    outext = '.css'
  else
    outext = '.html'
  end
  url.gsub!(extname, outext)

  if url.include?('_')
    url = url.split('_').join('/')  # /2010/01/01_some-title.html -> /2010/01/01/some-title.html
  end

  url
end

layout '*', :haml, format: :html5
